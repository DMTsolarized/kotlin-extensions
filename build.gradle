plugins {
    id 'signing'
    id 'maven'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'org.jetbrains.dokka' version '1.4.0'
}

group 'com.github.inforion'
version '0.3.4'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib'
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect'
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-test'
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.3.9'

    implementation group: 'joda-time', name: 'joda-time', version: '2.10.6'
    implementation group: 'io.javalin', name: 'javalin', version: '3.11.0'
    implementation group: 'com.konghq', name: 'unirest-java', version: '3.9.00'
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.11.3'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda', version: '2.11.3'

    implementation group: 'net.sourceforge.argparse4j', name: 'argparse4j', version: '0.8.1'
    implementation group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'

    implementation group: 'com.github.inforion', name: 'kotlin-logging', version: '0.2.3'

    implementation group: 'org.jblas', name: 'jblas', version: '1.2.4'

    testImplementation group: 'junit', name: 'junit', version: '4.13'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.2'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.16.1'
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

dokkaJavadoc.configure {
    dokkaSourceSets {
        configureEach {
            includeNonPublic = false
            reportUndocumented = true
            jdkVersion = "11"
            skipEmptyPackages = true
            noStdlibLink = false
            noJdkLink = false
        }
    }
}

task dokkaJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from dokkaJavadoc
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    repositories {
        maven {
            credentials {
                username = project.properties["mavenUsername"]
                password = project.properties["mavenPassword"]
            }

            def releasesRepoUrl = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
            def snapshotsRepoUrl = uri("https://oss.sonatype.org/content/repositories/snapshots/")
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
        }
    }

    publications {
        kotlinLogging(MavenPublication) {
            from components.kotlin

            artifact tasks.dokkaJar
            artifact tasks.sourcesJar

            pom {
                groupId = group
                artifactId = "kotlin-extensions"
                name = "kotlin-extensions"
                version = version
                url = "https://github.com/inforion/kotlin-extensions"
                description = 'Kotlin extension methods and function for different Java libraries'

                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        name = 'Alexei Gladkikh'
                        email = 'gladkikhalexei@gmail.com'
                        organization = 'INFORION, LLC'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/inforion/kotlin-extensions.git'
                    developerConnection = 'scm:git:ssh://github.com/inforion/kotlin-extensions.git'
                    url = "https://github.com/inforion/kotlin-extensions"
                }
            }
        }
    }
}

signing {
    required = false
    if (project.hasProperty('signing.keyId')) {
        useGpgCmd()
    }
    sign publishing.publications.kotlinLogging
}