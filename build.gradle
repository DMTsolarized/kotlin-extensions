import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'
    id 'org.jetbrains.dokka' version '1.4.0'
    id 'signing'
    id 'maven'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
}

subprojects { subproject ->
    if (childProjects.isEmpty()) {
        beforeEvaluate {
            subproject.apply plugin: 'signing'
            subproject.apply plugin: 'maven'
            subproject.apply plugin: 'maven-publish'
            subproject.apply plugin: 'org.jetbrains.kotlin.jvm'
            subproject.apply plugin: 'org.jetbrains.dokka'

            repositories {
                mavenLocal()
                mavenCentral()
                jcenter()
                maven { url "https://jitpack.io" }
            }

            group 'com.github.inforion.common'
            version '0.4.0'
        }

        afterEvaluate {
            tasks.findAll { it instanceof Test }.each { task ->
                task.jvmArgs += [
                        "-server",
                        "-Xms2G",
                        "-Xmx5G",
                        "-XX:MaxDirectMemorySize=2g",
                        "-XX:+UseParallelGC",
                        "-XX:SurvivorRatio=6",
                        "-XX:-UseGCOverheadLimit"]

                task.testLogging {
                    events "passed", "skipped", "failed" //, "standardOut", "standardError"

                    showExceptions true
                    exceptionFormat "full"
                    showCauses true
                    showStackTraces true

                    // showStandardStreams = false
                }
            }

            tasks.findAll { it instanceof KotlinCompile }.each { task ->
                task.kotlinOptions { jvmTarget = "11" }
            }

            if (tasks.findByName("dokkaJar") == null) {
                task dokkaJar(type: Jar, dependsOn: dokkaJavadoc) {
                    classifier = 'javadoc'
                    from dokkaJavadoc
                }
            }

            if (tasks.findByName("sourcesJar") == null) {
                task sourcesJar(type: Jar, dependsOn: classes) {
                    classifier = 'sources'
                    from sourceSets.main.allSource
                }
            }

            dokkaJavadoc.configure {
                dokkaSourceSets {
                    configureEach {
                        includeNonPublic = false
                        reportUndocumented = true
                        jdkVersion = "11"
                        skipEmptyPackages = true
                        noStdlibLink = false
                        noJdkLink = false
                    }
                }
            }

            publishing {
                repositories {
                    maven {
                        credentials {
                            username = project.properties["mavenUsername"]
                            password = project.properties["mavenPassword"]
                        }

                        def releasesRepoUrl = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
                        def snapshotsRepoUrl = uri("https://oss.sonatype.org/content/repositories/snapshots/")
                        url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
                    }
                }

                publications {
                    "${subproject.name}"(MavenPublication) {
                        from components.kotlin

//                        artifact tasks.dokkaJar
                        artifact tasks.sourcesJar

                        pom {
                            groupId = group
                            artifactId = "${subproject.name}"
                            name = "${subproject.name}"
                            version = version
                            url = "https://github.com/inforion/kotlin-extensions"
                            description = 'Kotlin extension methods and function for different Java libraries'

                            licenses {
                                license {
                                    name = 'The MIT License'
                                    url = 'https://opensource.org/licenses/MIT'
                                }
                            }

                            developers {
                                developer {
                                    name = 'Alexei Gladkikh'
                                    email = 'gladkikhalexei@gmail.com'
                                    organization = 'INFORION, LLC'
                                }
                            }

                            scm {
                                connection = 'scm:git:git://github.com/inforion/kotlin-extensions.git'
                                developerConnection = 'scm:git:ssh://github.com/inforion/kotlin-extensions.git'
                                url = "https://github.com/inforion/kotlin-extensions"
                            }
                        }
                    }
                }
            }

            signing {
                required = project.hasProperty('signing.gnupg.keyName')
                if (required) useGpgCmd()
                sign "publishing.publications.${subproject.name}"
            }

            dependencies {
                implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib'
                implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect'
                implementation group: 'org.jetbrains.kotlin', name: 'kotlin-test'
                implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.4.2'

                implementation group: 'joda-time', name: 'joda-time', version: '2.10.6'

                implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda', version: '2.12.3'
                implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.11.3'

                implementation group: 'com.github.inforion', name: 'kotlin-logging', version: '0.2.4'

                testImplementation group: 'junit', name: 'junit', version: '4.13'
                testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.2'
                testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.2'
                testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.16.1'
            }
        }
    }
}